<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="6" passed="5">
  <reporter-output>
    <line>
      <![CDATA[=============鎵ц鐢ㄥ姏鏂规硶: createServerTest.runScenario(org.test4j.spec.inner.IScenario)[pri:0, instance:sence.createServerTest@42dafa95]===============]]>
    </line>
    <line>
      <![CDATA[=============鎵ц缁撴灉: Success=============]]>
    </line>
    <line>
      <![CDATA[=============鎵ц鐢ㄥ姏鏂规硶: createServerTest.runScenario(org.test4j.spec.inner.IScenario)[pri:0, instance:sence.createServerTest@42dafa95]===============]]>
    </line>
    <line>
      <![CDATA[=============鎵ц缁撴灉: Success=============]]>
    </line>
    <line>
      <![CDATA[=============鎵ц鐢ㄥ姏鏂规硶: loginTest.runScenario(org.test4j.spec.inner.IScenario)[pri:0, instance:sence.loginTest@4667ae56]===============]]>
    </line>
    <line>
      <![CDATA[=============鎵ц缁撴灉: Success=============]]>
    </line>
    <line>
      <![CDATA[=============鎵ц鐢ㄥ姏鏂规硶: loginTest.runScenario(org.test4j.spec.inner.IScenario)[pri:0, instance:sence.loginTest@4667ae56]===============]]>
    </line>
    <line>
      <![CDATA[=============鎵ц缁撴灉: Success=============]]>
    </line>
    <line>
      <![CDATA[=============鎵ц鐢ㄥ姏鏂规硶: loginTest.runScenario(org.test4j.spec.inner.IScenario)[pri:0, instance:sence.loginTest@4667ae56]===============]]>
    </line>
    <line>
      <![CDATA[=============鎵ц缁撴灉: Success=============]]>
    </line>
    <line>
      <![CDATA[=============鎵ц鐢ㄥ姏鏂规硶: loginTest.runScenario(org.test4j.spec.inner.IScenario)[pri:0, instance:sence.loginTest@4667ae56]===============]]>
    </line>
    <line>
      <![CDATA[=============鎵ц缁撴灉: Failed=============]]>
    </line>
  </reporter-output>
  <suite name="Default Suite" duration-ms="1689" started-at="2019-08-19T02:31:41Z" finished-at="2019-08-19T02:31:43Z">
    <groups>
      <group name="createServer">
        <method signature="createServerTest.runScenario(org.test4j.spec.inner.IScenario)[pri:0, instance:sence.createServerTest@42dafa95]" name="runScenario" class="sence.createServerTest"/>
      </group> <!-- createServer -->
      <group name="login">
        <method signature="loginTest.runScenario(org.test4j.spec.inner.IScenario)[pri:0, instance:sence.loginTest@4667ae56]" name="runScenario" class="sence.loginTest"/>
      </group> <!-- login -->
    </groups>
    <test name="test4Demo" duration-ms="1689" started-at="2019-08-19T02:31:41Z" finished-at="2019-08-19T02:31:43Z">
      <class name="sence.createServerTest">
        <test-method status="PASS" signature="aBeforeClass(org.testng.ITestContext)[pri:0, instance:sence.createServerTest@42dafa95]" name="aBeforeClass" is-config="true" duration-ms="77" started-at="2019-08-19T10:31:41Z" finished-at="2019-08-19T10:31:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@4eb386df]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aBeforeClass -->
        <test-method status="PASS" signature="initPrinter()[pri:0, instance:sence.createServerTest@42dafa95]" name="initPrinter" is-config="true" duration-ms="0" started-at="2019-08-19T10:31:41Z" finished-at="2019-08-19T10:31:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initPrinter -->
        <test-method status="PASS" signature="aBeforeMethod(java.lang.reflect.Method)[pri:0, instance:sence.createServerTest@42dafa95]" name="aBeforeMethod" is-config="true" duration-ms="34" started-at="2019-08-19T10:31:41Z" finished-at="2019-08-19T10:31:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sence.createServerTest.runScenario(org.test4j.spec.inner.IScenario) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aBeforeMethod -->
        <test-method status="PASS" signature="runScenario(org.test4j.spec.inner.IScenario)[pri:0, instance:sence.createServerTest@42dafa95]" name="runScenario" duration-ms="1336" started-at="2019-08-19T10:31:41Z" description="鏂板鏈嶅姟" data-provider="story" finished-at="2019-08-19T10:31:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[01 - case1:登录后新增服务，状态=空闲]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[=============鎵ц缁撴灉: Success=============]]>
            </line>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="zAfterMethod(java.lang.reflect.Method)[pri:0, instance:sence.createServerTest@42dafa95]" name="zAfterMethod" is-config="true" duration-ms="0" started-at="2019-08-19T10:31:42Z" finished-at="2019-08-19T10:31:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sence.createServerTest.runScenario(org.test4j.spec.inner.IScenario) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- zAfterMethod -->
        <test-method status="PASS" signature="runScenario(org.test4j.spec.inner.IScenario)[pri:0, instance:sence.createServerTest@42dafa95]" name="runScenario" duration-ms="54" started-at="2019-08-19T10:31:42Z" description="鏂板鏈嶅姟" data-provider="story" finished-at="2019-08-19T10:31:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[02 - case2:登录后新增服务，状态=使用中]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[=============鎵ц缁撴灉: Success=============]]>
            </line>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="aBeforeMethod(java.lang.reflect.Method)[pri:0, instance:sence.createServerTest@42dafa95]" name="aBeforeMethod" is-config="true" duration-ms="0" started-at="2019-08-19T10:31:42Z" finished-at="2019-08-19T10:31:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sence.createServerTest.runScenario(org.test4j.spec.inner.IScenario) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aBeforeMethod -->
        <test-method status="PASS" signature="zAfterMethod(java.lang.reflect.Method)[pri:0, instance:sence.createServerTest@42dafa95]" name="zAfterMethod" is-config="true" duration-ms="1" started-at="2019-08-19T10:31:43Z" finished-at="2019-08-19T10:31:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sence.createServerTest.runScenario(org.test4j.spec.inner.IScenario) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- zAfterMethod -->
        <test-method status="PASS" signature="cleanSpecPrinter()[pri:0, instance:sence.createServerTest@42dafa95]" name="cleanSpecPrinter" is-config="true" duration-ms="4" started-at="2019-08-19T10:31:43Z" finished-at="2019-08-19T10:31:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanSpecPrinter -->
        <test-method status="PASS" signature="zAfterClass()[pri:0, instance:sence.createServerTest@42dafa95]" name="zAfterClass" is-config="true" duration-ms="1" started-at="2019-08-19T10:31:43Z" finished-at="2019-08-19T10:31:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- zAfterClass -->
      </class> <!-- sence.createServerTest -->
      <class name="sence.loginTest">
        <test-method status="PASS" signature="aBeforeClass(org.testng.ITestContext)[pri:0, instance:sence.loginTest@4667ae56]" name="aBeforeClass" is-config="true" duration-ms="1" started-at="2019-08-19T10:31:43Z" finished-at="2019-08-19T10:31:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@4eb386df]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aBeforeClass -->
        <test-method status="PASS" signature="initPrinter()[pri:0, instance:sence.loginTest@4667ae56]" name="initPrinter" is-config="true" duration-ms="0" started-at="2019-08-19T10:31:43Z" finished-at="2019-08-19T10:31:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initPrinter -->
        <test-method status="PASS" signature="aBeforeMethod(java.lang.reflect.Method)[pri:0, instance:sence.loginTest@4667ae56]" name="aBeforeMethod" is-config="true" duration-ms="2" started-at="2019-08-19T10:31:43Z" finished-at="2019-08-19T10:31:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sence.loginTest.runScenario(org.test4j.spec.inner.IScenario) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aBeforeMethod -->
        <test-method status="PASS" signature="runScenario(org.test4j.spec.inner.IScenario)[pri:0, instance:sence.loginTest@4667ae56]" name="runScenario" duration-ms="12" started-at="2019-08-19T10:31:43Z" data-provider="story" finished-at="2019-08-19T10:31:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[01 - case1:输入正确用户名、密码]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[=============鎵ц缁撴灉: Success=============]]>
            </line>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="zAfterMethod(java.lang.reflect.Method)[pri:0, instance:sence.loginTest@4667ae56]" name="zAfterMethod" is-config="true" duration-ms="1" started-at="2019-08-19T10:31:43Z" finished-at="2019-08-19T10:31:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sence.loginTest.runScenario(org.test4j.spec.inner.IScenario) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- zAfterMethod -->
        <test-method status="PASS" signature="aBeforeMethod(java.lang.reflect.Method)[pri:0, instance:sence.loginTest@4667ae56]" name="aBeforeMethod" is-config="true" duration-ms="0" started-at="2019-08-19T10:31:43Z" finished-at="2019-08-19T10:31:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sence.loginTest.runScenario(org.test4j.spec.inner.IScenario) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aBeforeMethod -->
        <test-method status="PASS" signature="runScenario(org.test4j.spec.inner.IScenario)[pri:0, instance:sence.loginTest@4667ae56]" name="runScenario" duration-ms="11" started-at="2019-08-19T10:31:43Z" data-provider="story" finished-at="2019-08-19T10:31:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[02 - case2:输入错误用户名]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[=============鎵ц缁撴灉: Success=============]]>
            </line>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="zAfterMethod(java.lang.reflect.Method)[pri:0, instance:sence.loginTest@4667ae56]" name="zAfterMethod" is-config="true" duration-ms="1" started-at="2019-08-19T10:31:43Z" finished-at="2019-08-19T10:31:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sence.loginTest.runScenario(org.test4j.spec.inner.IScenario) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- zAfterMethod -->
        <test-method status="PASS" signature="aBeforeMethod(java.lang.reflect.Method)[pri:0, instance:sence.loginTest@4667ae56]" name="aBeforeMethod" is-config="true" duration-ms="1" started-at="2019-08-19T10:31:43Z" finished-at="2019-08-19T10:31:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sence.loginTest.runScenario(org.test4j.spec.inner.IScenario) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aBeforeMethod -->
        <test-method status="PASS" signature="runScenario(org.test4j.spec.inner.IScenario)[pri:0, instance:sence.loginTest@4667ae56]" name="runScenario" duration-ms="14" started-at="2019-08-19T10:31:43Z" data-provider="story" finished-at="2019-08-19T10:31:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[03 - case3:输入错误密码]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[=============鎵ц缁撴灉: Success=============]]>
            </line>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="zAfterMethod(java.lang.reflect.Method)[pri:0, instance:sence.loginTest@4667ae56]" name="zAfterMethod" is-config="true" duration-ms="0" started-at="2019-08-19T10:31:43Z" finished-at="2019-08-19T10:31:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sence.loginTest.runScenario(org.test4j.spec.inner.IScenario) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- zAfterMethod -->
        <test-method status="PASS" signature="aBeforeMethod(java.lang.reflect.Method)[pri:0, instance:sence.loginTest@4667ae56]" name="aBeforeMethod" is-config="true" duration-ms="0" started-at="2019-08-19T10:31:43Z" finished-at="2019-08-19T10:31:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sence.loginTest.runScenario(org.test4j.spec.inner.IScenario) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aBeforeMethod -->
        <test-method status="FAIL" signature="runScenario(org.test4j.spec.inner.IScenario)[pri:0, instance:sence.loginTest@4667ae56]" name="runScenario" duration-ms="27" started-at="2019-08-19T10:31:43Z" data-provider="story" finished-at="2019-08-19T10:31:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[04 - case5:输入错误密码123]]>
              </value>
            </param>
          </params>
          <exception class="org.test4j.spec.exceptions.ScenarioAssertError">
            <message>
              <![CDATA[04 - case5:输入错误密码123
 throw an exception:
java.lang.RuntimeException: Invoke class (sence.loginTest.java:1) method[checkMsg] error:
Invoke spec method[checkMsg] error:java.lang.AssertionError: expected [用户名不存在！] but found [密码不正确！]!
java.lang.RuntimeException: Invoke class (sence.loginTest.java:1) method[checkMsg] error:
Invoke spec method[checkMsg] error:java.lang.AssertionError: expected [用户名不存在！] but found [密码不正确！]!
	at org.test4j.spec.JSpecExecutorFactory.runSingleStep(JSpecExecutorFactory.java:216)
	at org.test4j.spec.JSpecExecutorFactory.runScenario(JSpecExecutorFactory.java:178)
	at org.test4j.testng.JSpec.run(JSpec.java:75)
	at sence.loginTest.runScenario(loginTest.java:23)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:182)
	at org.test4j.testng.Test4JHookable.run(Test4JHookable.java:56)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:194)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
Caused by: java.lang.RuntimeException: Invoke spec method[checkMsg] error:java.lang.AssertionError: expected [用户名不存在！] but found [密码不正确！]
	at org.test4j.spec.scenario.step.SpecMethod.execute(SpecMethod.java:98)
	at org.test4j.spec.JSpecExecutorFactory.runSingleStep(JSpecExecutorFactory.java:210)
	... 37 more
Caused by: java.lang.RuntimeException: java.lang.AssertionError: expected [用户名不存在！] but found [密码不正确！]
	at org.test4j.tools.commons.ExceptionWrapper.wrapWithRuntimeException(ExceptionWrapper.java:106)
	at org.test4j.tools.reflector.MethodAccessor.invokeUnThrow(MethodAccessor.java:75)
	at org.test4j.spec.scenario.step.SpecMethod.execute(SpecMethod.java:93)
	... 38 more
Caused by: java.lang.AssertionError: expected [用户名不存在！] but found [密码不正确！]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:176)
	at org.testng.Assert.assertEquals(Assert.java:186)
	at sence.loginTest.checkMsg(loginTest.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.test4j.tools.reflector.MethodAccessor.invoke(MethodAccessor.java:49)
	at org.test4j.tools.reflector.MethodAccessor.invokeUnThrow(MethodAccessor.java:72)
	... 39 more

04 - case5:输入错误密码123 throw errors at:]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.test4j.spec.exceptions.ScenarioAssertError: 04 - case5:输入错误密码123
 throw an exception:
java.lang.RuntimeException: Invoke class (sence.loginTest.java:1) method[checkMsg] error:
Invoke spec method[checkMsg] error:java.lang.AssertionError: expected [用户名不存在！] but found [密码不正确！]!
java.lang.RuntimeException: Invoke class (sence.loginTest.java:1) method[checkMsg] error:
Invoke spec method[checkMsg] error:java.lang.AssertionError: expected [用户名不存在！] but found [密码不正确！]!
	at org.test4j.spec.JSpecExecutorFactory.runSingleStep(JSpecExecutorFactory.java:216)
	at org.test4j.spec.JSpecExecutorFactory.runScenario(JSpecExecutorFactory.java:178)
	at org.test4j.testng.JSpec.run(JSpec.java:75)
	at sence.loginTest.runScenario(loginTest.java:23)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.MethodInvocationHelper$1.runTestMethod(MethodInvocationHelper.java:182)
	at org.test4j.testng.Test4JHookable.run(Test4JHookable.java:56)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeHookable(MethodInvocationHelper.java:194)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
Caused by: java.lang.RuntimeException: Invoke spec method[checkMsg] error:java.lang.AssertionError: expected [用户名不存在！] but found [密码不正确！]
	at org.test4j.spec.scenario.step.SpecMethod.execute(SpecMethod.java:98)
	at org.test4j.spec.JSpecExecutorFactory.runSingleStep(JSpecExecutorFactory.java:210)
	... 37 more
Caused by: java.lang.RuntimeException: java.lang.AssertionError: expected [用户名不存在！] but found [密码不正确！]
	at org.test4j.tools.commons.ExceptionWrapper.wrapWithRuntimeException(ExceptionWrapper.java:106)
	at org.test4j.tools.reflector.MethodAccessor.invokeUnThrow(MethodAccessor.java:75)
	at org.test4j.spec.scenario.step.SpecMethod.execute(SpecMethod.java:93)
	... 38 more
Caused by: java.lang.AssertionError: expected [用户名不存在！] but found [密码不正确！]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:494)
	at org.testng.Assert.assertEquals(Assert.java:123)
	at org.testng.Assert.assertEquals(Assert.java:176)
	at org.testng.Assert.assertEquals(Assert.java:186)
	at sence.loginTest.checkMsg(loginTest.java:55)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.test4j.tools.reflector.MethodAccessor.invoke(MethodAccessor.java:49)
	at org.test4j.tools.reflector.MethodAccessor.invokeUnThrow(MethodAccessor.java:72)
	... 39 more

04 - case5:输入错误密码123 throw errors at:
	at org.test4j.spec.JSpecExecutorFactory.runScenario(JSpecExecutorFactory.java:191)
	at org.test4j.testng.JSpec.run(JSpec.java:75)
	at sence.loginTest.runScenario(loginTest.java:23)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.test4j.testng.Test4JHookable.run(Test4JHookable.java:56)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- org.test4j.spec.exceptions.ScenarioAssertError -->
          <reporter-output>
            <line>
              <![CDATA[=============鎵ц缁撴灉: Failed=============]]>
            </line>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="zAfterMethod(java.lang.reflect.Method)[pri:0, instance:sence.loginTest@4667ae56]" name="zAfterMethod" is-config="true" duration-ms="1" started-at="2019-08-19T10:31:43Z" finished-at="2019-08-19T10:31:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void sence.loginTest.runScenario(org.test4j.spec.inner.IScenario) throws java.lang.Throwable]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- zAfterMethod -->
        <test-method status="PASS" signature="cleanSpecPrinter()[pri:0, instance:sence.loginTest@4667ae56]" name="cleanSpecPrinter" is-config="true" duration-ms="4" started-at="2019-08-19T10:31:43Z" finished-at="2019-08-19T10:31:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanSpecPrinter -->
        <test-method status="PASS" signature="zAfterClass()[pri:0, instance:sence.loginTest@4667ae56]" name="zAfterClass" is-config="true" duration-ms="0" started-at="2019-08-19T10:31:43Z" finished-at="2019-08-19T10:31:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- zAfterClass -->
      </class> <!-- sence.loginTest -->
    </test> <!-- test4Demo -->
  </suite> <!-- Default Suite -->
</testng-results>
